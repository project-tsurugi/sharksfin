name: Sharksfin-Install-Dependencies

inputs:
  token:
    description: token for checkout private repo
    required: true
  checkout:
    description: Skip checkout if false
    default: true
  path:
    description: Relative path under $GITHUB_WORKSPACE to place the repository
    default: build-deps

runs:
  using: "composite"

  steps:
    - name: Checkout_Limestone
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/limestone
        path: ${{ inputs.path }}/limestone
        ref: master
        token: ${{ inputs.token }}

    - name: Checkout_Yakushima
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/yakushima
        path: ${{ inputs.path }}/yakushima
        ref: master
        token: ${{ inputs.token }}

    - name: Checkout_Shirakami
      uses: actions/checkout@v3
      if: ${{ inputs.checkout == 'true' }}
      with:
        repository: project-tsurugi/shirakami
        path: ${{ inputs.path }}/shirakami
        ref: master
        token: ${{ inputs.token }}

    - name: Install_Limestone
      run: |
        cd ${{ inputs.path }}/limestone
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Yakushima
      run: |
        cd ${{ inputs.path }}/yakushima
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_BENCHMARK=OFF -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ..
        cmake --build . --target install --clean-first
      shell: bash

    - name: Install_Shirakami
      run: |
        cd ${{ inputs.path }}/shirakami
        rm -fr build
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=OFF -DBUILD_DOCUMENTS=OFF -DBUILD_BENCHMARK=OFF -DFORCE_INSTALL_RPATH=ON -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ..
        cmake --build . --target install --clean-first
      shell: bash
